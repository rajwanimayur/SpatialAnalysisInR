install.packages("GISTools")
#Install GISTools package
install.packages("GISTools", dependencies = T)
dieroll <- c(2, 5, 1, 6, 5, 5, 4, 1)
dierool
dieroll
ls()
newdieroll <- dieroll
newdieroll <- dieroll/2
ls()
newdieroll
rm(newdieroll)
ls()
newdieroll
help(log)
log(100)
log(100,1)
log(100,e)
log(100,exp(1))
log10(100)
log2(100)
log2(c(1, 2, 4, 10, 50, 100))
apropos("log")
apropos("norm")
A <- matrix(c(1:8), nrow = 2, ncol = 4, byrow = F)
A
A <- matrix(c(1:8), nrow = 2, ncol = 4, byrow = T)
A
apropos("test")
Ident <- matrix(c = (1,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3)
Ident <- matrix(c(1,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3)
Ident
pi
choose(4,2)
choose(52,5)
s <- c(1, 1, 3, 4, 7, 11)
length(s)
cumsum(s)
diff(s)
diff(s, lag = 2)
a <- c(1:10)
A <- matrix(a, nrow = 5, ncol = 2, byrow = F)
B <- matrix(a, nrow = 5, ncol = 2, byrow = T)
C <- matrix(a, nrow = 2, ncol = 5, byrow = T)
A
B
C
dim(A)
dim(C)
t(C)
eigen(C)
B%*%C
eigen(B%*%C)
D <- C%*%B
D
det(D)
solve(D)
abs(2^3 - 3^2)
exp(e)
exp(exp(1))
2.3^8
2^8
0.8^2
2.3^8+log(7.5)-cos(pi/sqrt(2))
1.5:10
prod(1:10)
prod(1:6)
prod(1,2,3,6)
seq(1,5 by = 0.5)
seq(1,5, by = 0.5)
new.data <- data.frame()
new.data <- edit(new.data)
fix(new.data)
data()
trees <- data("trees")
trees
data("trees")
trees
trees$Height
sum(trees$Height)
trees[4,3]
trees[4,]
trees[,3]
attach(trees)
Height
search()
detach(trees)
search()
attributes(trees)
trees$Height[trees$Height > 75]
data <- read.table(file.choose(), header = T)
rep(c(1:3), 3)
rep(c(1:3,"banana"), 2)
schedule <- data.frame()
fix(schedule)
fix(schedule)
schedule
data("stackloss")
attach(stackloss)
Water.Temp
Acid.Conc.
tempacid <- data.frame(c(Water.Temp, Acid.Conc.))
tempacid
tempacid <- as.data.frame(c(Water.Temp, Acid.Conc.))
tempacid
tempacid <- data.frame(Water.Temp, Acid.Conc.)
tempacid
seq(10, 10.5, length.out = 10)
seq(10, 10.5, length.out = 9)
seq(10, 10.5, length.out = 11)
seq(10, 10.5, length.out = 12)
apropos(random)
apropos("random)
apropos("random")
apropos("random")
rand100 <- .Random.seed(1:100)
blahblah <- scan()
blahblah
blahblah <- sample(1:10, 10)
blahblah
blahblah <- sample(1:100, 10)
blahblah
blahblah <- sample(1:10, 10, replace = T)
blahblah
attach(trees)
plot(Height, Volume)
curve(sin(x), from = 0, to = 2*pi, add = T)
curve(sin(x), from = 0, to = 2*pi)
par(lend = 2)
curve(sin(x), from = 0, to = 2*pi)
par(bg= "cornsilk")
curve(sin(x), from = 0, to = 2*pi)
demo(graphics)
data(mtcars)
attach(mtcars)
mtcars
mean(hp)
var(mpg)
quantile(qsec, probs = c(0.20, 0.80))
cor(wt,mpg)
table(cyl)
as.logical(c("True", "T", 0))
as.logical(c("True", "T", "0"))
as.logical(0
)
as.logical(c(0,2))
income <- ordered(c("Low", "Low", "High", "Medium", "High", "Low", "High", "Low", "Medium"),
levels=("Low", "Medium", "High"))
income <- ordered(c("Low", "Low", "High", "Medium", "High", "Low", "High", "Low", "Medium"),
levels=c("Low", "Medium", "High"))
income > "Low"
sort(income)
table(income)
tmp <- as.list(income)
tmp
employee <- list(name="Lex Comber", start.year = 2005, position="Professor")
employee
append(tmp, list(c(7,6,9,1)))
lapply(tmp, is.numeric)
lapply(tmp, is.factor)
lapply(tmp, length)
lapply(tmp, length)
colours <- factor(c("red", "blue", "red", "white", "silver", "red", "white", "silver", "red",
"red", "white", "silver", "silver"),
levels=c("red", "blue", "white", "silver", "black"))
colours[4] <- "orange"
table(colours)
colours <- factor(c("red", "blue", "red", "white", "silver", "red", "white", "silver", "red",
"red", "white", "silver", "silver"),
levels=c("red", "blue", "white", "silver", "black"))
table(colours)
colours[4] <- "orange"
table(colours)
colours2 <- c("red", "blue", "red", "white", "silver", "red", "white", "silver", "red",
"red", "white", "silver", "silver")
table(colours2)
car.type <- factor(c("saloon", "saloon", "hatchback", "saloon",
"convertible", "hatchback", "convertible",
"saloon", "hatchback", "saloon", "saloon",
"saloon", "hatchback"),
levels = c("saloon", "hatchback", "convertible"))
table(car.type, colours)
table(car.type, colours2)
table(car.type, colours)
table(colours, car.type)
engine <- ordered(c("1.1litre","1.3litre","1.1litre",
"1.3litre","1.6litre","1.3litre","1.6litre",
"1.1litre","1.3litre","1.1litre", "1.1litre",
"1.3litre","1.3litre"),
levels=c("1.1litre","1.3litre","1.6litre"))
table(engine)
engine > "1.1litre"
colours[engine > "1.1litre"]
colours[4] <- "white"
colours[engine > "1.1litre"]
is.factor(colours[engine>"1.1litre"])
table(car.type[engine < "1.6litre"])
table(colours[car.type = "hatchback" & engine > "1.3litre"])
table(colours[engine > "1.3litre"])
table(car.type["hatchback"],colours[engine > "1.3litre"])
table(colours[(engine > "1.3litre") & (car.type == "hatchback")])
table(colours[car.type == "hatchback" & engine > "1.3litre"])
colours <- factor(c("red","blue","red","white",
"silver","red","white","silver",
"red","red","white","silver","silver"),
levels=c("red","blue","white","silver","black"))
car.type <- factor(c("saloon","saloon","hatchback",
"saloon","convertible","hatchback","convertible",
"saloon", "hatchback","saloon", "saloon",
"saloon","hatchback"),
levels=c("saloon","hatchback","convertible"))
crosstab <- table(car.type,colours)
dim(crosstab)
crosstab
rowSums(crosstab)
colnames(crosstab)
apply(crosstab,1, max)
example <- c(1.4,2.6,1.1,1.5,1.2,2.6)
which.max(example)
example <- c(1.4,0.6,1.1,1.5,1.2,2.6)
which.max(example)
apply(crosstab, 1, which.max)
levels(crosstab)[apply(crosstab,1,which.max)]
levels(crosstab)[apply(crosstab,2,which.max)]
levels(colours)[apply(crosstab, 1, which.max)]
levels(car.type)[apply(crosstab, 1, which.max)]
levels(car.type)[apply(crosstab, 2, which.max)]
colnames(crosstab)[which.max(crosstab[,1])]
crosstab[,1]
which.max(crosstab[,1])
#Define the function
which.max.name <- function(x){}
which.max.name <- function(x){}
which.max.name <- function(x){
return (names(x)[which.max(x)])
}
example
names(example) <- c("Bradford","Leeds","York",
"Harrogate","Thirsk")
example
which.max.name(example)
names(example) <- c("Bradford","Leeds","York",
"Harrogate","Thirsk", "Nottingham")
which.max.name(example)
apply(crosstab, 2, which.max.name)
apply(crosstab, 1, which.max.name)
most.popular <- list(color = apply(crosstab,1, which.max.name), type = apply(crosstab, 2, which.max.name))
most.popular
new.sales.data <- function(colours, car.type) {
xtab <- table(car.type,colours)
result <- list(colour=apply(xtab,1,which.max.name),
type=apply(xtab,2,which.max.name),
total=sum(xtab))
class(result) <- "sales.data"
return(result)}
this.week <- new.sales.data(ccolours = colours, car.type = car.type)
this.week <- new.sales.data(colours = colours, car.type = car.type)
this.week
print.sales.data <- function(sales.data){
cat("Most Popular:")
cat("Colour:", sales.data$colour)
cat("Type:", sales.data$type)
cat("Total:", sales.data$total)
}
print.sales.data(this.week)
print.sales.data <- function(sales.data){
cat("Most Popular:\n")
cat("\nColour: ", sales.data$colour)
cat("\nType: ", sales.data$type)
cat("\nTotal:", sales.data$total)
}
print.sales.data <- function(sales.data){
cat("Most Popular:\n")
cat("\nColour: ", sales.data$colour)
cat("\nType: ", sales.data$type)
cat("\nTotal: ", sales.data$total)
}
print.sales.data(this.week)
x2 <- seq(0,2*pi, len = 100)
y2 = sin(x2)
plot(x2,y2,type='1')
plot(x2,y2,type='l')
plot(x2,y2,type='l', lwd=3, col = 'darkgreen')
plot(x2,y2,type='l', lwd=3, col = 'darkgreen', ylim = c(-1.2,1.2))
y2r <- y2 + rnorm(100,0,0.1)
points(x2,y2r, pch =16, col = 'darkred')
plot(x2,y2,type='l', lwd=3, col = 'darkgreen')
y4 <- cos(x2)
lines(x2,y4,lwd=3, lty = 2, col="darkblue")
par(mfrow=c(1,2))
plot(y2,y4)
plot(y2,y4, col='lightgreen')
polygon(y2,y4,col = "lightgreen")
plot(y2,y4)
polygon(y2,y4,col = "lightgreen")
par(mfrow=c(1,2))
plot(y2,y4)
polygon(y2,y4,col = "lightgreen")
plot(y2,y4, asp = 1, type = 'n')
polygon(y2,y4,col='lightgreen')
data(geogia)
data(georgia)
library(GISTools)
data(georgia)
georgia.polys
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
View(georgia.polys)
dim(georgia.polys)
length(georgia.polys)
length(georgia.polys[1])
length(georgia.polys[[1])
length(georgia.polys[[1]])
View(georgia.polys)
georgia.polys[[1]]
plot(georgia.polys)
plot(georgia.polys[[2]])
plot(georgia.polys[[1]])
appling <- georgia.polys[[1]]
plot(appling, asp=1, type='n', xlab = "Easting", ylab="Northing")
polygon(appling, col=rgb(0, 0.5, 0.7))
text("Appling County", cex = 1.5)
locator()
text(1268235, 1057028, "Appling County", cex = 1.5)
text(1268235, 1057028, "Appling County", cex = 0.5)
colours()
length(colours())
data(georgia)
library(GISTools)
data(georgia)
plot(appling, asp=1, type='n', xlab="Easting", ylab="Northing")
# plot the points
points(x = runif(500,126,132)*10000,
y = runif(500,103,108)*10000, pch=16, col='red')
# plot the polygon with a transparency factor
polygon(appling, col=rgb(0,0.5,0.7,0.4))
appling <- georgia.polys[[1]]
plot(appling, asp=1, type='n', xlab="Easting", ylab="Northing")
# plot the points
points(x = runif(500,126,132)*10000,
y = runif(500,103,108)*10000, pch=16, col='red')
# plot the polygon with a transparency factor
polygon(appling, col=rgb(0,0.5,0.7,0.4))
locator()
plot(appling, asp=1, type='n', xlab="Easting", ylab="Northing")
polygon(appling, col="#B3B333")
# add text, sepcifying its placement, colour and size
text(1273274,1053000,"Appling County",cex=1.5)
text(1058060,1049000,"Georgia",col='darkred')
plot(appling, asp=1, type='n', xlab="Easting", ylab="Northing")
polygon(appling, col="#B3B333")
# add text, sepcifying its placement, colour and size
text(1273274,1273274,"Appling County",cex=1.5)
plot(appling, asp=1, type='n', xlab="Easting", ylab="Northing")
polygon(appling, col="#B3B333")
# add text, sepcifying its placement, colour and size
text(1273274,1058060,"Appling County",cex=1.5)
locator()
plot(appling, asp=1, type='n', xlab="Easting", ylab="Northing")
polygon(appling, col="#B3B333")
# add text, sepcifying its placement, colour and size
text(1273050,1060977,"Appling County",cex=1.5)
locator()
plot(appling, asp=1, type='n', xlab="Easting", ylab="Northing")
polygon(appling, col="#B3B333")
# add text, sepcifying its placement, colour and size
text(1287518,1057235,"Appling County",cex=1.5)
locator()
locator()
text(1287019, 1052995,"Georgia", col="darked")
text(1287019, 1052995,"Georgia", col="darkred")
plot(c(-1.5,1.5),c(-1.5,1.5),asp=1, type='n')
# plot the green/blue rectangle
rect(-0.5,-0.5,0.5,0.5, border=NA, col=rgb(0,0.5,0.5,0.7))
# then the second one
rect(0,0,1,1, col=rgb(1,0.5,0.5,0.7))
data("meuse.grid")
mat = SpatialPixelsDataFrame(points = meuse.grid[c("x","y")], data = meuse.grid)
meuse.grid
par(mfrow = c(1,2))
par(mar = c(0,0,0,0))
image(mat, "dist")
library(RColorBrewer)
greenpal <- brewer.pal(7, "green")
greenpal <- brewer.pal(7, "greens")
greenpal <- brewer.pal(7, "Greens")
image(mat, "dist", col=greenpal)
par(mfrow=c(1,1))
contour(mat,"dist")
write.csv(appling, file = "test.csv")
read.csv("test.csv")
ls()
writePolyShape(georgia, "georgia.shp")
writeOGR(georgia, "georgia.shp")
rgdal::writeOGR(georgia, "georgia.shp")
rgdal::writeOGR(obj = georgia, dsn = ".", layer = "georgia",
driver = "ESRI Shapefile", overwrite_layer = T )
new.georgia <- rgdal::readOGR("georgia.shp")
library(sf)
g2 <- st_read("georgia.shp")
st_write(g2, "georgia.shp", delete_layer = T)
