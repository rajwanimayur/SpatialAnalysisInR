states@data <- inner_join(states@data, accidents, by = c('ST_NM' = 'States.UTs'))
#Create a temporary dataframe for analysis purpose
df <- states@data[,1:5]
#Rename Columns to Year only
colnames(df) <- gsub("\\D+\\.\\.\\.", "", colnames(df))
library(tidyr)
df.m <- gather(df, key = "Year", value = "Persons_Injured", colnames(df)[2:5])
saveRDS(object = df, file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
library(ggplot2)
p1 <- ggplot(data = df.m[15:20,]) + geom_point(aes(x = ST_NM, y = Persons_Injured, color = Year))
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
View(df)
View(df.m)
library(ggplot2)
p1 <- ggplot(data = df.m, aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year))
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
View(df.m)
library(ggplot2)
p1 <- ggplot(data = df.m[startsWith(ST_NM, "K")], aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year))
library(ggplot2)
p1 <- ggplot(data = df.m[startsWith(df.m$ST_NM, "K")], aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year))
library(ggplot2)
p1 <- ggplot(data = df.m, aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(df.m$ST_NM)
library(ggplot2)
p1 <- ggplot(data = df.m, aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(ST_NM)
library(ggplot2)
p1 <- ggplot(data = df.m, aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(df.m$ST_NM)
View(df.m)
library(ggplot2)
p1 <- ggplot(data = df.m, aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(df.m[2:]$ST_NM)
library(ggplot2)
p1 <- ggplot(data = df.m, aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(df.m[2:,]$ST_NM)
library(ggplot2)
p1 <- ggplot(data = df.m, aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(df.m[2:144,]$ST_NM)
library(ggplot2)
p1 <- ggplot(data = df.m, aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(~ST_NM)
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
library(ggplot2)
p1 <- ggplot(data = df.m, aes(x = Year, y = Persons_Injured)) +
geom_point(aes(size = ST_NM)) +
facet_wrap(~Year)
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
p1 <- ggplot(data = df.m[startsWith(df.m$ST_NM, "A)"], aes(x = ST_NM, y = Persons_Injured)) +
library(ggplot2)
p1 <- ggplot(data = df.m[startsWith(df.m$ST_NM, "A"),], aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(~ST_NM)
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
library(ggplot2)
p1 <- ggplot(data = df.m[startsWith(df.m$ST_NM, "M"),], aes(x = ST_NM, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(~ST_NM)
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
library(ggplot2)
p1 <- ggplot(data = df.m[startsWith(df.m$ST_NM, "M"),], aes(x = Year, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(~ST_NM)
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
states_df <- broom::tidy(states)
library(dplyr)
head(states_df, n = 2) #Investigating the fortified data
states$id <- row.names(states) #Allocate an id variable to sp data
head(states@data, n = 2) # A check before we join
states_df <- left_join(states_df, states@data)
states_df <- broom::tidy(states)
head(states_df, 2)
head(states@data, 2)
states_df <- left_join(states_df, accidents_df)
head(states_df, n = 2) #Investigating the fortified data
states$id <- row.names(states) #Allocate an id variable to sp data
head(states@data, n = 2) # A check before we join
states_df <- left_join(states_df, accidents_df)
View(accidents)
View(accidents_raw)
View(accidents)
View(accidents_raw)
accidents_df<- readRDS(file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
View(accidents_df)
accidents_df <- left_join(states@data, accidents_df)
head(accidents_df)
head(states_df, n = 2) #Investigating the fortified data
head(accidents_df)
#Create a temporary dataframe for analysis purpose
df <- states@data[,1:5]
#Rename Columns to Year only
colnames(df) <- gsub("\\D+\\.\\.\\.", "", colnames(df))
library(tidyr)
df.m <- gather(df, key = "Year", value = "Persons_Injured", colnames(df)[2:5])
saveRDS(object = df, file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
accidents_df<- readRDS(file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
head(accidents_df)
head(states@data)
states <-  states_raw
states <-  states_raw
head(accidents_df)
head(states@data)
states_df <- left_join(accidents_df, )
head(states@data)
states_df <- left_join(states@data, accidents_df)
head(states_df)
states@data <- edit(states@data)
head(accidents_df)
head(states@data)
states_df <- left_join(states@data, accidents_df)
head(states_df)
states_df <- broom::tidy(states)
head(states_df)
head(states@data)
states <- left_join(states@data, accidents_df)
head(states@data)
head(states)
states <-  states_raw
states@data <- edit(states@data)
# Creating a data frame from spatial object
states_df <- broom::tidy(states)
head(states_df)
library(rgdal)
states_raw <- readOGR(dsn = "Data/States/states.shp", stringsAsFactors = FALSE)
states <- states_raw
states <- states_raw
#Create a new data frame object accidents
accidents_raw<- read.csv("Data/Road_Accidents_2017-Annuxure_Tables_4.csv", stringsAsFactors = FALSE)
accidents_raw
#To avoid re-reading of dataset, we create new object accidents for future use
accidents <- accidents_raw
accidents$States.UTs[!accidents$States.UTs %in% states$ST_NM]
states$ST_NM[!states$ST_NM %in% accidents$States.UTs]
states@data <- edit(states@data)
library(dplyr)  #load dplyr
states@data <- inner_join(states@data, accidents, by = c('ST_NM' = 'States.UTs'))
#Create a temporary dataframe for analysis purpose
df <- states@data[,1:5]
#Rename Columns to Year only
colnames(df) <- gsub("\\D+\\.\\.\\.", "", colnames(df))
library(tidyr)
df.m <- gather(df, key = "Year", value = "Persons_Injured", colnames(df)[2:5])
saveRDS(object = df, file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
library(ggplot2)
p1 <- ggplot(data = df.m[startsWith(df.m$ST_NM, "M"),], aes(x = Year, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(~ST_NM)
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
states_df <- broom::tidy(states)
head(states_df)
library(dplyr)
head(states_df, n = 2) #Investigating the fortified data
states$id <- row.names(states) #Allocate an id variable to sp data
head(states@data, n = 2) # A check before we join
states_df <- left_join(states_df, states@data)
# Preparing the Sparial Object
states <-  states_raw
states@data <- edit(states@data)
states@data <- left_join(states@data, accidents_df)
# Creating a data frame from spatial object
states_df <- broom::tidy(states)
head(states_df)
states$id <-  row.names(states)
head(states@data)
states_df <- left_join(states_df, states@data)
head(states_df)
View(df.m)
saveRDS(object = df.m, file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
accidents_df<- readRDS(file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
# Preparing the Sparial Object
states <-  states_raw
states@data <- edit(states@data)
states@data <- left_join(states@data, accidents_df)
# Creating a data frame for plotting
states_df <- broom::tidy(states)
head(states_df)
states$id <-  row.names(states)
head(states@data)
states_df <- left_join(states_df, states@data)
head(states_df)
ggplot(data = states_df,
aes(x = long, y = lat, fill = Persons_Injured, group = group)) + #defining Variables
geom_polygon() + #plot states map
geom_path(colour = "black", lwd = 0.05) + # states borders
coord_equal() + #fixed x and y scales
facet_wrap(~ Year) + # one plot per year
scale_fill_gradient2(low = "blue", mid = "yellow", high = "green",
midpoint = 20000, name = "No. of Persons Injured") + # legend options
theme(axis.text = element_blank(), # remove axis lables
axis.title = element_blank(), # remove axis titles
axis.ticks = element_blank()) # remove axis ticks
ggplot(data = states_df,
aes(x = long, y = lat, fill = Persons_Injured, group = group)) + #defining Variables
geom_polygon() + #plot states map
geom_path(colour = "black", lwd = 0.05) + # states borders
coord_equal() + #fixed x and y scales
facet_wrap(~ Year) + # one plot per year
scale_fill_gradient(low = "white", high = "green",
name = "No. of Persons Injured") + # legend options
theme(axis.text = element_blank(), # remove axis lables
axis.title = element_blank(), # remove axis titles
axis.ticks = element_blank()) # remove axis ticks
View(states_df)
View(accidents_df)
View(states)
accidents_df<- readRDS(file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
# Creating a data frame for plotting
states_df <- broom::tidy(states)
head(states_df)
states$id <-  row.names(states)
head(states@data)
states_df <- left_join(states_df, states@data)
head(states_df)
# Preparing the Sparial Object
states <-  states_raw
states@data <- edit(states@data)
states@data <- left_join(states@data, accidents_df)
accidents_df<- readRDS(file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
# Creating a data frame for plotting
states <-  states_raw
states_df <- broom::tidy(states)
head(states_df)
states$id <-  row.names(states)
head(states@data)
states_df <- left_join(states_df, states@data)
head(states_df)
# Preparing the Sparial Object
states_df <- edit(states_df)
# Creating a data frame for plotting
states <-  states_raw
states_df <- broom::tidy(states)
head(states_df)
states@data <- edit(states@data)
states$id <-  row.names(states)
head(states@data)
states_df <- left_join(states_df, states@data)
head(states_df)
# Preparing the Spatial Object
states_df <- left_join(states_df, accidents_df)
```{r}
ggplot(data = states_df,
aes(x = long, y = lat, fill = Persons_Injured, group = group)) + #defining Variables
geom_polygon() + #plot states map
geom_path(colour = "black", lwd = 0.05) + # states borders
coord_equal() + #fixed x and y scales
facet_wrap(~ Year) + # one plot per year
scale_fill_gradient(low = "white", high = "green",
name = "No. of Persons Injured") + # legend options
theme(axis.text = element_blank(), # remove axis lables
axis.title = element_blank(), # remove axis titles
axis.ticks = element_blank()) # remove axis ticks
plot(states)
x <- c("sp", "ggplot2", "ggmap", "rgdal", "rgeos", "dplyr", "tidyr")
# install.packages(x) # warning: uncommenting this may take a number of minutes
lapply(x, library, character.only = TRUE) # load the required packages
x <- c("sp", "ggplot2", "ggmap", "rgdal", "rgeos", "dplyr", "tidyr")
# install.packages(x) # warning: uncommenting this may take a number of minutes
lapply(x, library, character.only = TRUE) # load the required packages
library(rgdal)
states_raw <- readOGR(dsn = "Data/States/states.shp", stringsAsFactors = FALSE)
states <- states_raw
slotNames(states)
plot(states)
plot(states) # Not shown, will plot the shapefile
#We first see the classes of all variables in spatial dataset
sapply(states@data, class)
states@data[startsWith(states$ST_NM, "A"),]
sel <- startsWith(states$ST_NM, "A")
plot(states[sel,])
#Plotting initial graph
plot(states, col = "lightgray")
sel <- startsWith(states$ST_NM, "A")
plot(states[sel,], col = "blue", add = TRUE)
states@proj4string
states <- states_raw
#Create a new data frame object accidents
accidents_raw<- read.csv("Data/Road_Accidents_2017-Annuxure_Tables_4.csv", stringsAsFactors = FALSE)
accidents_raw
#To avoid re-reading of dataset, we create new object accidents for future use
accidents <- accidents_raw
accidents$States.UTs[!accidents$States.UTs %in% states$ST_NM]
states$ST_NM[!states$ST_NM %in% accidents$States.UTs]
states@data <- edit(states@data)
library(dplyr)  #load dplyr
states@data <- inner_join(states@data, accidents, by = c('ST_NM' = 'States.UTs'))
#Create a temporary dataframe for analysis purpose
df <- states@data[,1:5]
#Rename Columns to Year only
colnames(df) <- gsub("\\D+\\.\\.\\.", "", colnames(df))
library(tidyr)
df.m <- gather(df, key = "Year", value = "Persons_Injured", colnames(df)[2:5])
library(tidyr)
df.m <- gather(df, key = "Year", value = "Persons_Injured", colnames(df)[2:5])
saveRDS(object = df.m, file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
library(ggplot2)
p1 <- ggplot(data = df.m[startsWith(df.m$ST_NM, "M"),], aes(x = Year, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(~ST_NM)
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
#Create a temporary dataframe for analysis purpose
df <- states@data[,1:5]
#Rename Columns to Year only
colnames(df) <- gsub("\\D+\\.\\.\\.", "", colnames(df))
library(tidyr)
df.m <- gather(df, key = "Year", value = "Persons_Injured", colnames(df)[2:5])
saveRDS(object = df.m, file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
library(ggplot2)
p1 <- ggplot(data = df.m[startsWith(df.m$ST_NM, "M"),],
aes(x = Year, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(~ST_NM)
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
library(ggplot2)
p1 <- ggplot(data = df.m[startsWith(df.m$ST_NM, "M"),],
aes(x = Year, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(~ST_NM)
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
states_df <- broom::tidy(states)
head(states_df)
states_df <- broom::tidy(states)
# head(states_df)
library(dplyr)
head(states_df, n = 2) #Investigating the fortified data
states$id <- row.names(states) #Allocate an id variable to sp data
head(states@data, n = 2) # A check before we join
states_df <- left_join(states_df, states@data)
library(dplyr)
# head(states_df, n = 2) #Investigating the fortified data
states$id <- row.names(states) #Allocate an id variable to sp data
# head(states@data, n = 2) # A check before we join
states_df <- left_join(states_df, states@data)
states_df <- broom::tidy(states)
# head(states_df)
library(dplyr)
# head(states_df, n = 2) #Investigating the fortified data
states$id <- row.names(states) #Allocate an id variable to sp data
# head(states@data, n = 2) # A check before we join
states_df <- left_join(states_df, states@data)
View(states_df)
map <- ggplot(data = states_df, aes(x = long, y = lat, group = group, fill = State.UT.wise.Total.Number.of.Persons.Injured.in.Road.Accidents.during...2015))+ # define variables
geom_polygon() + # Plot the states
coord_equal() + # fixed x & y scales
labs(x = "longitude", y = "latitude", fill = "Number of Persons_Injured") + #Labels
ggtitle("Road Accidents in India (2015)") + #title
scale_fill_gradient(low = "white", high = "green") #colours
map
install.packages("ggsn")
map + ggsn::blank() + ggsn::north(states_df)
map + ggsn::blank() + ggsn::north(states_df) #Output not shown.
ggplot(data = states_df,
aes(x = long, y = lat, fill = Persons_Injured, group = group)) + #defining Variables
geom_polygon() + #plot states map
geom_path(colour = "black", lwd = 0.05) + # states borders
coord_equal() + #fixed x and y scales
facet_wrap(~ Year) + # one plot per year
scale_fill_gradient(low = "white", high = "green",
name = "No. of Persons Injured") + # legend options
theme(axis.text = element_blank(), # remove axis lables
axis.title = element_blank(), # remove axis titles
axis.ticks = element_blank()) # remove axis ticks
accidents_df<- readRDS(file = "Data/Statewise_Yearly_Road_Accidents_India.Rds") # load the saved R object
# Creating a data frame for plotting
states <-  states_raw
states_df <- broom::tidy(states)
head(states_df)
states@data <- edit(states@data)
states$id <-  row.names(states)
head(states@data)
states_df <- left_join(states_df, states@data)
head(states_df)
# Preparing the Spatial Object
states_df <- left_join(states_df, accidents_df)
ggplot(data = states_df,
aes(x = long, y = lat, fill = Persons_Injured, group = group)) + #defining Variables
geom_polygon() + #plot states map
geom_path(colour = "black", lwd = 0.05) + # states borders
coord_equal() + #fixed x and y scales
facet_wrap(~ Year) + # one plot per year
scale_fill_gradient(low = "white", high = "green",
name = "No. of Persons Injured") + # legend options
theme(axis.text = element_blank(), # remove axis lables
axis.title = element_blank(), # remove axis titles
axis.ticks = element_blank()) # remove axis ticks
library(rgdal)
states_raw <- readOGR(dsn = "Data/States/states.shp", stringsAsFactors = FALSE)
states <- states_raw
slotNames(states)
plot(states) # Not shown, will plot the shapefile
#We first see the classes of all variables in spatial dataset
sapply(states@data, class)
states@data[startsWith(states$ST_NM, "A"),]
sel <- startsWith(states$ST_NM, "A")
plot(states[sel,])
#Plotting initial graph
plot(states, col = "lightgray")
sel <- startsWith(states$ST_NM, "A")
plot(states[sel,], col = "blue", add = TRUE)
states@proj4string
# Remove the existing CRS Information first.
proj4string(states) <- NA_character_
proj4string(states) <- CRS("+init=epsg:27700")
library(rgeos)
plot(states, col = "grey")
#Find India geographic centroid
cent_del <- gCentroid(states[states$ST_NM == "NCT of Delhi",])
points(cent_del, cex = 3)
#Set  2° buffer
del_buffer <- gBuffer(spgeom = cent_del, width = 2)
# We first select any intersecting zones
del_central <-  states[del_buffer,]
# Now we plot our selection
plot(del_central, col = "lightblue", add = T)
# Next we highlight the buffer area
plot(del_buffer, add = T, border = "red", lwd = 2)
states <- states_raw
#Create a new data frame object accidents
accidents_raw<- read.csv("Data/Road_Accidents_2017-Annuxure_Tables_4.csv", stringsAsFactors = FALSE)
accidents_raw
#To avoid re-reading of dataset, we create new object accidents for future use
accidents <- accidents_raw
accidents$States.UTs[!accidents$States.UTs %in% states$ST_NM]
states$ST_NM[!states$ST_NM %in% accidents$States.UTs]
states@data <- edit(states@data)
library(dplyr)  #load dplyr
states@data <- inner_join(states@data, accidents, by = c('ST_NM' = 'States.UTs'))
#Create a temporary dataframe for analysis purpose
df <- states@data[,1:5]
#Rename Columns to Year only
colnames(df) <- gsub("\\D+\\.\\.\\.", "", colnames(df))
library(tidyr)
df.m <- gather(df, key = "Year", value = "Persons_Injured", colnames(df)[2:5])
saveRDS(object = df.m, file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
library(ggplot2)
p1 <- ggplot(data = df.m[startsWith(df.m$ST_NM, "M"),],
aes(x = Year, y = Persons_Injured)) +
geom_point(aes(size = Persons_Injured, color = Year)) +
facet_wrap(~ST_NM)
p1 + ggtitle("Number of Persons Injured in Road Accidents") +  theme(legend.position = "bottom")
states_df <- broom::tidy(states)
# head(states_df)
library(dplyr)
# head(states_df, n = 2) # Investigate the tide-ied data
states$id <- row.names(states) #Allocate an id variable to sp data
# head(states@data, n = 2) # A check before we join
states_df <- left_join(states_df, states@data)
map <- ggplot(data = states_df, aes(x = long, y = lat, group = group, fill = State.UT.wise.Total.Number.of.Persons.Injured.in.Road.Accidents.during...2015))+ # define variables
geom_polygon() + # Plot the states
coord_equal() + # fixed x & y scales
labs(x = "longitude", y = "latitude", fill = "Number of Persons_Injured") + #Labels
ggtitle("Road Accidents in India (2015)") + #title
scale_fill_gradient(low = "white", high = "green") #colours
map
accidents_df<- readRDS(file = "Data/Statewise_Yearly_Road_Accidents_India.Rds") # load the saved R object
# Creating a data frame for plotting
states <-  states_raw
states_df <- broom::tidy(states)
head(states_df)
states@data <- edit(states@data)
states$id <-  row.names(states)
head(states@data)
states_df <- left_join(states_df, states@data)
head(states_df)
# Preparing the Spatial Object
states_df <- left_join(states_df, accidents_df)
ggplot(data = states_df,
aes(x = long, y = lat, fill = Persons_Injured, group = group)) + #defining Variables
geom_polygon() + #plot states map
geom_path(colour = "black", lwd = 0.05) + # states borders
coord_equal() + #fixed x and y scales
facet_wrap(~ Year) + # one plot per year
scale_fill_gradient(low = "white", high = "green",
name = "No. of Persons Injured") + # legend options
theme(axis.text = element_blank(), # remove axis lables
axis.title = element_blank(), # remove axis titles
axis.ticks = element_blank()) # remove axis ticks
ttinytex::install_tinytex()
tinytex::install_tinytex()
ggplot(data = states_df,
aes(x = long, y = lat, fill = Persons_Injured, group = group)) + #defining Variables
geom_polygon() + #plot states map
geom_path(colour = "black", lwd = 0.05) + # states borders
coord_equal() + #fixed x and y scales
facet_wrap(~ Year) + # one plot per year
scale_fill_gradient(low = "white", high = "green",
name = "No. of Persons Injured") + # legend options
theme(axis.text = element_blank(), # remove axis lables
axis.title = element_blank(), # remove axis titles
axis.ticks = element_blank()) # remove axis ticks
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
unlink('TutorialNotebook_cache', recursive = TRUE)
library(rgdal)
states_raw <- readOGR(dsn = "Data/States/states.shp", stringsAsFactors = FALSE)
states <- states_raw
library(rgdal)
states_raw <- readOGR(dsn = "Data/States/states.shp", stringsAsFactors = FALSE)
states <- states_raw
saveRDS(object = df.m, file = "Data/Statewise_Yearly_Road_Accidents_India.Rds")
accidents_df<- readRDS(file = "Data/Statewise_Yearly_Road_Accidents_India.Rds") # load the saved R object
